<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DallEX.io.API</name>
    </assembly>
    <members>
        <member name="M:DallEX.io.API.LendingTools.ILendings.GetLoanOffersAsync(System.String)">
            <summary>Gets a data summary of the markets available.</summary>
        </member>
        <member name="E:DallEX.io.API.ILive.OnTickerChanged">
            <summary>Occurs when a currency pair's market data changes.</summary>
        </member>
        <member name="E:DallEX.io.API.ILive.OnTrollboxMessage">
            <summary>Occurs when someone sends a message on the trollbox.</summary>
        </member>
        <member name="M:DallEX.io.API.ILive.Start">
            <summary>Initializes the live feed.</summary>
        </member>
        <member name="M:DallEX.io.API.ILive.Stop">
            <summary>Disposes the live feed.</summary>
        </member>
        <member name="M:DallEX.io.API.ILive.SubscribeToTickerAsync">
            <summary>Starts the process of receiving price ticker messages.</summary>
        </member>
        <member name="M:DallEX.io.API.ILive.SubscribeToTrollboxAsync">
            <summary>Starts the process of receiving trollbox messages.</summary>
        </member>
        <member name="T:DallEX.io.API.MarketTools.MarketPeriod">
            <summary>Represents a time frame of a market.</summary>
        </member>
        <member name="F:DallEX.io.API.MarketTools.MarketPeriod.Minutes5">
            <summary>A time interval of 5 minutes.</summary>
        </member>
        <member name="F:DallEX.io.API.MarketTools.MarketPeriod.Minutes15">
            <summary>A time interval of 15 minutes.</summary>
        </member>
        <member name="F:DallEX.io.API.MarketTools.MarketPeriod.Minutes30">
            <summary>A time interval of 30 minutes.</summary>
        </member>
        <member name="F:DallEX.io.API.MarketTools.MarketPeriod.Hours2">
            <summary>A time interval of 2 hours.</summary>
        </member>
        <member name="F:DallEX.io.API.MarketTools.MarketPeriod.Hours4">
            <summary>A time interval of 4 hours.</summary>
        </member>
        <member name="F:DallEX.io.API.MarketTools.MarketPeriod.Day">
            <summary>A time interval of a day.</summary>
        </member>
        <member name="P:DallEX.io.API.PoloniexClient.Authenticator">
            <summary>Represents the authenticator object of the client.</summary>
        </member>
        <member name="P:DallEX.io.API.PoloniexClient.Lendings">
            <summary>A class which contains market tools for the client.</summary>
        </member>
        <member name="P:DallEX.io.API.PoloniexClient.Markets">
            <summary>A class which contains market tools for the client.</summary>
        </member>
        <member name="P:DallEX.io.API.PoloniexClient.Trading">
            <summary>A class which contains trading tools for the client.</summary>
        </member>
        <member name="P:DallEX.io.API.PoloniexClient.Wallet">
            <summary>A class which contains wallet tools for the client.</summary>
        </member>
        <member name="P:DallEX.io.API.PoloniexClient.Live">
            <summary>A class which represents live data fetched automatically from the server.</summary>
        </member>
        <member name="M:DallEX.io.API.PoloniexClient.#ctor">
            <summary>Creates a new instance of Poloniex API .NET's client service.</summary>
            <param name="publicApiKey">Your public API key.</param>
            <param name="privateApiKey">Your private API key.</param>
        </member>
        <member name="P:DallEX.io.API.IAuthenticator.PublicKey">
            <summary>Gets or sets the public API key to use Poloniex's services with.</summary>
        </member>
        <member name="P:DallEX.io.API.IAuthenticator.PrivateKey">
            <summary>Gets or sets the private API key to use Poloniex's services with.</summary>
        </member>
        <member name="T:DallEX.io.API.OrderType">
            <summary>Represents the type of an order.</summary>
        </member>
        <member name="M:DallEX.io.API.IMarkets.GetSummaryAsync">
            <summary>Gets a data summary of the markets available.</summary>
        </member>
        <member name="M:DallEX.io.API.IMarkets.GetOpenOrdersAsync(DallEX.io.API.CurrencyPair,System.UInt32)">
            <summary>Fetches the best priced orders for a given market.</summary>
            <param name="currencyPair">The currency pair, which consists of the currency being traded on the market, and the base's code.</param>
            <param name="depth">The number of orders to fetch from each side.</param>
        </member>
        <member name="M:DallEX.io.API.IMarkets.GetTradesAsync(DallEX.io.API.CurrencyPair)">
            <summary>Fetches the last 200 trades of a given market.</summary>
            <param name="currencyPair">The currency pair, which consists of the currency being traded on the market, and the base's code.</param>
        </member>
        <member name="M:DallEX.io.API.IMarkets.GetTradesAsync(DallEX.io.API.CurrencyPair,System.DateTime,System.DateTime)">
            <summary>Fetches the trades of a given market in a given time period.</summary>
            <param name="currencyPair">The currency pair, which consists of the currency being traded on the market, and the base's code.</param>
            <param name="startTime">The time to start fetching data from.</param>
            <param name="endTime">The time to stop fetching data at.</param>
        </member>
        <member name="M:DallEX.io.API.IMarkets.GetChartDataAsync(DallEX.io.API.CurrencyPair,DallEX.io.API.MarketTools.MarketPeriod,System.DateTime,System.DateTime)">
            <summary>Fetches the chart data which Poloniex uses for their candlestick graphs for a market view of a given time period.</summary>
            <param name="currencyPair">The currency pair, which consists of the currency being traded on the market, and the base's code.</param>
            <param name="period">The sampling frequency of the chart.</param>
            <param name="startTime">The time to start fetching data from.</param>
            <param name="endTime">The time to stop fetching data at.</param>
        </member>
        <member name="M:DallEX.io.API.IMarkets.GetChartDataAsync(DallEX.io.API.CurrencyPair,DallEX.io.API.MarketTools.MarketPeriod)">
            <summary>Fetches the chart data which Poloniex uses for their candlestick graphs for a market view of a given time period.</summary>
            <param name="currencyPair">The currency pair, which consists of the currency being traded on the market, and the base's code.</param>
            <param name="period">The sampling frequency of the chart.</param>
        </member>
        <member name="M:DallEX.io.API.IMarkets.GetChartDataAsync(DallEX.io.API.CurrencyPair)">
            <summary>Fetches the chart data which Poloniex uses for their candlestick graphs for a market view with a period of 30 minutes.</summary>
            <param name="currencyPair">The currency pair, which consists of the currency being traded on the market, and the base's code.</param>
        </member>
        <member name="M:DallEX.io.API.ITrading.GetOpenOrdersAsync(DallEX.io.API.CurrencyPair)">
            <summary>Fetches the current open orders in your account, ordered by most recent first.</summary>
            <param name="currencyPair">The currency pair, which consists of the currency being traded on the market, and the base's code.</param>
        </member>
        <member name="M:DallEX.io.API.ITrading.GetTradesAsync(DallEX.io.API.CurrencyPair)">
            <summary>Fetches the trades made in your account, ordered by most recent first.</summary>
            <param name="currencyPair">The currency pair, which consists of the currency being traded on the market, and the base's code.</param>
        </member>
        <member name="M:DallEX.io.API.ITrading.GetTradesAsync(DallEX.io.API.CurrencyPair,System.DateTime,System.DateTime)">
            <summary>Fetches the trades made in your account in a given time period, ordered by most recent first.</summary>
            <param name="currencyPair">The currency pair, which consists of the currency being traded on the market, and the base's code.</param>
            <param name="startTime">The time to start fetching data from.</param>
            <param name="endTime">The time to stop fetching data at.</param>
        </member>
        <member name="M:DallEX.io.API.ITrading.PostOrderAsync(DallEX.io.API.CurrencyPair,DallEX.io.API.OrderType,System.Double,System.Double)">
            <summary>Submits a new order to the market.</summary>
            <param name="currencyPair">The currency pair, which consists of the currency being traded on the market, and the base's code.</param>
            <param name="type">Type of the order.</param>
            <param name="pricePerCoin">The price to trade your coins at, compared to the base currency.</param>
            <param name="amountQuote">The amount of quote you want to trade.</param>
        </member>
        <member name="M:DallEX.io.API.ITrading.DeleteOrderAsync(DallEX.io.API.CurrencyPair,System.UInt64)">
            <summary>
                <para>Cancels an open order identified by the order ID.</para>
                <para>Warning: Order cancellations are processed FIFO (First In First Out) alongside new orders, so it may be matched before the cancellation can be processed.</para>
            </summary>
            <param name="currencyPair">The currency pair, which consists of the currency being traded on the market, and the base's code.</param>
            <param name="orderId">The ID of the order to cancel.</param>
        </member>
        <member name="M:DallEX.io.API.IWallet.GetBalancesAsync">
            <summary>Fetches all the balances in your account, split down into available balance, balance on orders, and the estimated BTC value of your balance.</summary>
        </member>
        <member name="M:DallEX.io.API.IWallet.GetDepositAddressesAsync">
            <summary>Returns all of your deposit addresses.</summary>
        </member>
        <member name="M:DallEX.io.API.IWallet.GetDepositsAndWithdrawalsAsync(System.DateTime,System.DateTime)">
            <summary>Returns your deposit and withdrawal history within a range of time.</summary>
            <param name="startTime">The time to start fetching data from.</param>
            <param name="endTime">The time to stop fetching data at.</param>
        </member>
        <member name="M:DallEX.io.API.IWallet.GetDepositsAndWithdrawalsAsync">
            <summary>Returns your complete deposit and withdrawal history.</summary>
        </member>
        <member name="M:DallEX.io.API.IWallet.PostGenerateNewDepositAddressAsync(System.String)">
            <summary>Generates a new deposit address for the specified currency.</summary>
            <param name="currency">The ticker of the currency to generate a new address for.</param>
        </member>
        <member name="M:DallEX.io.API.IWallet.PostWithdrawalAsync(System.String,System.Double,System.String,System.String)">
            <summary>
                <para>Immediately places a withdrawal for a given currency, with no email confirmation.</para>
                <para>Warning: In order to use this method, the withdrawal privilege must be enabled for your API key.</para>
            </summary>
            <param name="currency">The ticker of the currency to withdraw funds to.</param>
            <param name="amount">
                <para>The amount of currency you wish to withdraw.</para>
                <para>Note: A withdrawal fee will be applied to this amount.</para>
            </param>
            <param name="address">The address you wish to withdraw to.</param>
            <param name="paymentId">The payment ID you wish to use at the withdrawal.</param>
            <returns></returns>
        </member>
        <member name="M:DallEX.io.API.IWallet.PostWithdrawalAsync(System.String,System.Double,System.String)">
            <summary>
                <para>Immediately places a withdrawal for a given currency, with no email confirmation.</para>
                <para>Warning: In order to use this method, the withdrawal privilege must be enabled for your API key.</para>
            </summary>
            <param name="currency">The ticker of the currency to withdraw funds to.</param>
            <param name="amount">
                <para>The amount of currency you wish to withdraw.</para>
                <para>Note: A withdrawal fee will be applied to this amount.</para>
            </param>
            <param name="address">The address you wish to withdraw to.</param>
        </member>
    </members>
</doc>
